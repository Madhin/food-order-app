{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madhi\\\\Desktop\\\\nology\\\\food-order-app\\\\src\\\\components\\\\Checkout\\\\Checkout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport styles from './Checkout.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValid, setFormInputValid] = useState({\n    name: true,\n    road: true,\n    city: true,\n    postcode: true\n  });\n  const nameInputRef = useRef();\n  const roadInputRef = useRef();\n  const cityInputRef = useRef();\n  const postcodeInputRef = useRef();\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredRoad = roadInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredPostcode = postcodeInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredRoadIsValid = !isEmpty(enteredRoad);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostcodeIsValid = !isEmpty(enteredPostcode);\n    setFormInputValid({\n      name: enteredNameIsValid,\n      road: enteredRoadIsValid,\n      city: enteredCityIsValid,\n      postcode: enteredPostcodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredRoadIsValid && enteredCityIsValid && enteredPostcodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !formInputValid.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"road\",\n        children: \"Road Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"road\",\n        ref: roadInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postcode\",\n        children: \"Postcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postcode\",\n        ref: postcodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Checkout, \"JbrRFjERqeMQXh3Eyw1rVkCQ6Ao=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/madhi/Desktop/nology/food-order-app/src/components/Checkout/Checkout.jsx"],"names":["React","useRef","useState","styles","isEmpty","value","trim","Checkout","props","formInputValid","setFormInputValid","name","road","city","postcode","nameInputRef","roadInputRef","cityInputRef","postcodeInputRef","confirmHandler","e","preventDefault","enteredName","current","enteredRoad","enteredCity","enteredPostcode","enteredNameIsValid","enteredRoadIsValid","enteredCityIsValid","enteredPostcodeIsValid","formIsValid","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react'\r\nimport styles from './Checkout.module.scss'\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst Checkout = (props) => {\r\n\r\n  const [formInputValid, setFormInputValid] = useState({\r\n    name: true,\r\n    road: true,\r\n    city: true, \r\n    postcode: true\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const roadInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const postcodeInputRef = useRef();\r\n\r\n  const confirmHandler = (e) => {\r\n    e.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredRoad = roadInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n    const enteredPostcode = postcodeInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName)\r\n    const enteredRoadIsValid = !isEmpty(enteredRoad)\r\n    const enteredCityIsValid = !isEmpty(enteredCity)\r\n    const enteredPostcodeIsValid = !isEmpty(enteredPostcode)\r\n\r\n    setFormInputValid({\r\n      name: enteredNameIsValid,\r\n      road: enteredRoadIsValid,\r\n      city: enteredCityIsValid,\r\n      postcode: enteredPostcodeIsValid\r\n    })\r\n\r\n    const formIsValid = enteredNameIsValid && \r\n    enteredRoadIsValid && enteredCityIsValid && \r\n    enteredPostcodeIsValid\r\n\r\n    if (!formIsValid) {\r\n      return \r\n\r\n    }\r\n  }\r\n  \r\n  return (\r\n      <form onSubmit={confirmHandler} >\r\n        <div className = {styles.control}>\r\n        <label htmlFor ='name'>\r\n          Your Name\r\n        </label>\r\n        <input type = 'text' id= 'name' ref = {nameInputRef}/>\r\n        {!formInputValid.name && <p>Please enter details</p>}\r\n        </div>\r\n        <div className = {styles.control}>\r\n        <label htmlFor ='road'>\r\n          Road Name\r\n        </label>\r\n        <input type = 'text' id= 'road' ref = {roadInputRef}/>\r\n        </div>\r\n        <div className = {styles.control}>\r\n        <label htmlFor ='city'>\r\n          City\r\n        </label>\r\n        <input type = 'text' id= 'city' ref = {cityInputRef}/>\r\n        </div>\r\n        <div className = {styles.control}>\r\n        <label htmlFor ='postcode'>\r\n          Postcode\r\n        </label>\r\n        <input type = 'text' id= 'postcode' ref = {postcodeInputRef} />\r\n        </div>\r\n        <div className = {styles.actions}>\r\n        <button type ='button' onClick={props.onCancel}>Cancel</button>\r\n        <button className = {styles.submit}>Confirm</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default Checkout\r\n"]},"metadata":{},"sourceType":"module"}